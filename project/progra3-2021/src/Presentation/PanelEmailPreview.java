/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Emailer.EmailProperties;
import Emailer.EmailRenderer;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author pablo
 */
public class PanelEmailPreview extends javax.swing.JPanel {

    private EmailRenderer emailRenderer = new EmailRenderer();    
    private EmailProperties emailProperties = new EmailProperties();
    private String template = new String();

    public EmailRenderer getEmailRenderer() {
        return emailRenderer;
    }

    public void setEmailRenderer(EmailRenderer emailRenderer) {
        this.emailRenderer = emailRenderer;
    }

    public EmailProperties getEmailProperties() {
        return emailProperties;
    }

    public void setEmailProperties(EmailProperties emailProperties) {
        this.emailProperties = emailProperties;
    }

    public String getTemplate() {
        return template;
    }

    public void setTemplate(String template) {
        this.template = template;
    }
    
    
    /**
     * Creates new form PanelEmailPreview
     */
    public PanelEmailPreview() {
        initComponents();
        
        HTMLEditorKit kit = new HTMLEditorKit();
        jEditorPane1.setEditorKit(kit);
        Document doc = kit.createDefaultDocument();
        jEditorPane1.setDocument(doc);
    }

    public void PrevieEmail() throws IOException, URISyntaxException {        
        String emailPreview = new String();
        Hashtable<String, String> values = emailRenderer.DecomposeEmailPropertiesIntoTokens(this.emailProperties);
        emailPreview = GenerateEmailPreview(template, values);
        jEditorPane1.setText(emailPreview);
    }

    private String GenerateEmailPreview(String template, 
            Hashtable<String, String> values) throws IOException, URISyntaxException {
        String templateSource = new String();
        String rendition = new String();
        
        templateSource = emailRenderer.LoadHTMLTemplate(template);
        rendition = emailRenderer.RenderEmail(templateSource, values);        
        
        return rendition;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        jEditorPane1.setEditable(false);
        jScrollPane1.setViewportView(jEditorPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

